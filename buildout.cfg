# This buildout can be used to obtain a complete test system from scratch:
#
# Use it like this:
#
#    virtualenv .
#    ./bin/pip install zc.buildout
#    bin/buildout

[buildout]
#newest = false
allow-picked-versions = true
show-picked-verisions = true
index = https://pypi.python.org/simple/
extends = http://dist.plone.org/release/4.3.6/versions.cfg
versions = versions
develop =
    .
    #../bika.lims

zeoserver-address = 8100
zeoclient-address = 9090
user = admin:adminsecret

[instance]
recipe = plone.recipe.zope2instance
var = var
blob-storage = var/blobstorage
http-address = ${buildout:zeoclient-address}
user = ${buildout:user}
resources = ${buildout:directory}/resources
locales = ${buildout:directory}/locales
eggs = ${buildout:eggs}
event-log = var/instance-event.log
z2-log    = var/instance-Z2.log
pid-file  = var/instance.pid
lock-file = var/instance.lock

parts =
    lxml
    omelette
    instance
    test
    robot
    i18ndude
    update_translations

eggs =
    baobab.lims
    i18ndude
    lxml

[lxml]
recipe = z3c.recipe.staticlxml
egg = lxml #==2.3.6
force = false
static-build = true

[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs = baobab.lims [test]

[robot]
recipe = zc.recipe.egg
eggs =
    ${buildout:eggs}
    plone.app.robotframework

[omelette]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}

[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

[update_translations]
recipe = collective.recipe.template
output = ${buildout:directory}/bin/update_translations
input = inline:
    #!/bin/sh
    #Generated by buildout from baobab.lims/buildout.cfg
    I18NDUDE=${buildout:directory}/bin/i18ndude
    EXCLUDE="bin build develop-eggs eggs include lib local parts"
    LOCALES=${buildout:directory}/baobab/lims/locales
    cd $LOCALES

    ### always pull all translations from transifex.
    tx pull -a -f

    ###### bika domain ######
    ### Flush the english (transifex source language) po files
    ### If we don't do this, new bika-manual.pot translations won't be synced.
    > en/LC_MESSAGES/bika.po
    ### Re-scan source for new strings
    $I18NDUDE rebuild-pot -p bika.pot -c bika --exclude "$EXCLUDE" ${buildout:directory}
    ### add manual translations (overrides)
    $I18NDUDE trmerge bika-tmp.pot bika-manual.pot > bika.pot
    mv bika-tmp.pot bika.pot
    ### sync
    $I18NDUDE sync --pot bika.pot */LC_MESSAGES/bika.po

    ###### plone domain ######
    ### Flush the english (transifex source language) po files
    ### If we don't do this, new bika-manual.pot translations won't be synced.
    > en/LC_MESSAGES/plone.po
    ### Re-scan source for new strings
    $I18NDUDE rebuild-pot --pot plone.pot --create plone ${buildout:directory}/baobab/lims/profiles
    ### filter out messages that are already translated
    $I18NDUDE filter plone-tmp.pot ${buildout:directory}/parts/omelette/plone/app/locales/locales/plone.pot > plone-tmp.pot
    mv plone-tmp.pot plone.pot

    ### add manual translations (overrides)
    $I18NDUDE trmerge plone.pot plone-manual.pot > plone-tmp.pot
    mv plone-tmp.pot plone.pot

    ### sync
    $I18NDUDE sync --pot plone.pot */LC_MESSAGES/plone.po

    find . -name "*.mo" -delete
    for po in `find . -name "*.po"`; do
        ###
        msgfmt -o `dirname $po`/`basename $po .po`.mo $po;
    done

    ### Transifex
    eho run \"tx push -s -t\" if everything went smoothly.
mode = 755

[versions]
zc.buildout = 
setuptools = 
plone.recipe.zope2instance = 4.4.0
z3c.recipe.scripts = 1.0.1
i18ndude = 4.3
plone.formwidget.datetime = 1.3.5
collective.wtf = 1.0b9
plone.app.locales = 4.3.9
z3c.jbot = 0.8
Products.DataGridField = 1.9.6
Products.ATExtensions = 1.1
Products.AdvancedQuery = 4.0
plone.jsonapi.core = 0.7.0
plone.api = 1.10.2
magnitude = 0.9.4
gpw = 0.2
collective.progressbar = 0.5
Pyphen = 0.9.5
cairocffi = 0.9.0
cffi = 1.14.0
cssselect = 1.1.0
dicttoxml = 1.7.4
Werkzeug = 1.0.1
et-xmlfile = 1.0.1
jdcal = 1.4.1
Chameleon = 3.7.0
