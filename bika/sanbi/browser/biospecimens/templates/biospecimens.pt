<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:tal="http://xml.zope.org/namespaces/tal"
    xmlns:metal="http://xml.zope.org/namespaces/metal"
    xmlns:i18n="http://xml.zope.org/namespaces/i18n"
    metal:use-macro="here/main_template/macros/master"
    i18n:domain="bika">

<head>
    <metal:javascript_head_slot fill-slot="javascript_head_slot"
        tal:define="portal context/@@plone_portal_state/portal;">

        <script type="text/javascript" charset="utf-8">
            (function($){
                $(function(){

                    function removeOptions(element, storageType, text) {
                        var idElement = element.attr('id');
                        var arr = idElement.split('-');
                        var id = '#' + arr[0] + '-' + storageType + '-' + arr[2];
                        $(id).html('<option>' + text + '</option>');
                    }

                    function AjaxGetChildren(element, storageType){
                        var path = window.location.href.split('?')[0] + '/get_children';
                        $.ajax({
                            dataType: "json",
                            url: path,
                            data:{'uid': element.val()},
                            success: function (data) {
                                var idUnit = element.attr('id');
                                var arr = idUnit.split('-');
                                var idStorage = '#' + arr[0] + '-' + storageType + '-' + arr[2];
                                $.each(data, function (i, v) {
                                    $(idStorage).append(new Option(v.title, v.uid));
                                })
                            }
                        })
                    }

                    function repeatSamePosition(free, id){
                        var rooms = $("select[id*='select-room']");
                        var arr = id.split('-');
                        var indice = parseInt(arr[arr.length-1]);
                        var room = 'select-room-' + arr[arr.length-1];
                        var j = 1;
                        $.each(rooms, function (i, v) {
                            var tmp = v.id.split('-');
                            if(parseInt(tmp[tmp.length-1]) > indice && j < parseInt(free)) {
                                v.value = $('#'+room).val();
                                j++;
                            }
                        });
                        var freezers = $("select[id*='select-freezer']");
                        var freezer = 'select-freezer-' + arr[arr.length-1];
                        j = 1;
                        $.each(freezers, function (i, v) {
                            var tmp = v.id.split('-');
                            if(parseInt(tmp[tmp.length-1]) > indice && j < parseInt(free)){
                                var options = $('#' + freezer + ' > option').clone();
                                var element = $('#' + v.id);
                                element.html(options);
                                element.val($('#'+freezer).val());
                                j++;
                            }
                        });
                        var shelves = $("select[id*='select-shelf']");
                        var shelf = 'select-shelf-' + arr[arr.length-1];
                        j = 1;
                        $.each(shelves, function (i, v) {
                            var tmp = v.id.split('-');
                            if(parseInt(tmp[tmp.length-1]) > indice && j < parseInt(free)){
                                var options = $('#' + shelf + ' > option').clone();
                                var element = $('#' + v.id);
                                element.html(options);
                                element.val($('#'+shelf).val());
                                j++;
                            }
                        });
                        var boxes = $("select[id*='select-box']");
                        j = 1;
                        $.each(boxes, function (i, v) {
                            var tmp = v.id.split('-');
                            if(parseInt(tmp[tmp.length-1]) > indice && j < parseInt(free)){
                                var options = $('#' + id + ' > option').clone();
                                var element = $('#' + v.id);
                                element.html(options);
                                element.val($('#' + id).val());
                                j++;
                            }
                        })
                    }

                    function repeatSameVolume(id, value){
                        var volumes = $("input[id*='volume-']");
                        var arr = id.split('-');
                        var index = parseInt(arr[arr.length-1]);
                        $.each(volumes, function (i, v) {
                            var tmp = v.id.split('-');
                            if(parseInt(tmp[tmp.length-1]) > index){
                                var element = $('#' + v.id);
                                element.val(value);
                            }
                        });
                    }

                    function repeatSameSubject(id, value) {
                        var subjects = $("input[id*='subject-']");
                        var arr = id.split('-');
                        var index = parseInt(arr[arr.length-1]);
                        $.each(subjects, function (i, v) {
                            var tmp = v.id.split('-');
                            if(parseInt(tmp[tmp.length-1]) > index){
                                var element = $('#' + v.id);
                                element.val(value);
                            }
                        });
                    }

                    function repeatSameType(id, value) {
                        var types = $("select[id*='biospecimen-type']");
                        var arr = id.split('-');
                        var index = parseInt(arr[arr.length-1]);
                        $.each(types, function (i, v) {
                            var tmp = v.id.split('-');
                            if(parseInt(tmp[tmp.length-1]) > index){
                                var element = $('#' + v.id);
                                element.val(value);
                            }
                        })
                    }
                    $("input.biospec-add").on("click", function (e) {
                        e.preventDefault();

                        var kit = $("select.kits").val();
                        if(kit == "Select Kit"){
                            window.bika.lims.portalMessage("Select a kit!");
                            return false;
                        }
                        var title = $("input.bio-title").val();
                        var startIndex = $("input.biospec-sequencestart").val();
                        if(! startIndex) startIndex = 0;
                        var kitNum = $("input.kit-num").val();
                        var bioPerKit = $("input.biospec-per-kit").val();
                        var num = parseInt(kitNum) * parseInt(bioPerKit);
                        if(! num) num = 0;
                        var html = '';
                        for(var i = 1; i <= num; i++){
                            var j = i + parseInt(startIndex) - 1;
                            var tr = '<tr><td><input id="biospecimen-'+ i +'" type="text" value="'+ title +'-'+ j + '"/></td>' +
                                     '<td><input id="volume-'+ i + '" type="number" step="0.01" placeholder="Enter Volume"/></td>' +
                                     '<td><select id="biospecimen-type-'+ i +'"><option>None</option></select></td>' +
                                     '<td><input id="subject-'+ i +'" type="text"/></td>' +
                                     '<td><input id="stockitem-'+ i +'" type="text"/></td>' +
                                     '<td><input id="barcode-'+ i +'" type="text"/></td>' +
                                     '<td><select id="select-room-'+ i +'"><option>Room</option></select>' +
                                     '<select id="select-freezer-'+ i +'"><option>Freezer</option></select>' +
                                     '<select id="select-shelf-'+ i +'"><option>Shelf</option></select>' +
                                     '<select id="select-box-'+ i +'"><option>Box</option></select>' + '</td></tr>';
                            html += tr;
                        }

                        $("#body-biospecimens").html(html);
                        $("form[name='list-biospecs']").removeClass('hidden');

                        var request_data = {
                            portal_type: "BiospecType",
                            catalog_name: "bika_setup_catalog",
                            inactive_state: "active"
                        };

                        $.ajax({
                            type: "POST",
                            dataType: "json",
                            url: window.portal_url + "/@@API/read",
                            data: request_data,
                            success: function(data){
                                $.each(data.objects, function (i, v) {
                                    $("select[id*='biospecimen-type']").append(new Option(v.title, v.UID));
                                })
                            }
                        });

                        // Get rooms
                        var request_data = {
                            portal_type: "StorageUnit",
                            catalog_name: "bika_setup_catalog",
                            inactive_state: "active"
                        };

                        $.ajax({
                            type: "POST",
                            dataType: "json",
                            url: window.portal_url + "/@@API/read",
                            data: request_data,
                            success: function (data) {
                                $.each(data.objects, function (i, v) {
                                    $("select[id*='select-room']").append(new Option(v.title, v.UID))
                                })
                            }
                        });

                        $("select[id*='select-room']").on("change", function (e) {
                            removeOptions($(this), 'freezer', 'Freezer');
                            AjaxGetChildren($(this), 'freezer');
                        });

                        $("select[id*='select-freezer']").on("change", function (e) {
                            removeOptions($(this), 'shelf', 'Shelf');
                            AjaxGetChildren($(this), 'shelf');
                        });

                        $("select[id*='select-shelf']").on("change", function (e) {
                            removeOptions($(this), 'box', 'Box');
                            AjaxGetChildren($(this), 'box');
                        });

                        $("select[id*='select-box']").on("change", function (e) {
                            var path = window.location.href.split('?')[0] + '/available_positions';
                            var boxUID = $(this).val();
                            var id = $(this)[0].id;
                            $.ajax({
                                type: "POST",
                                dataType: "json",
                                url: path,
                                data: {'uid': boxUID},
                                success: function(data){
                                    if(data['free'] > 0){
                                        repeatSamePosition(data['free'], id);
                                    }
                                }
                            });
                        });

                        $("input[id*='volume-']").on("dblclick", function (e) {
                            var id = $(this)[0].id;
                            var value = $(this)[0].value;
                            repeatSameVolume(id, value);
                        });

                        $("input[id*='subject-']").on("dblclick", function (e) {
                            var id = $(this)[0].id;
                            var value = $(this)[0].value;
                            repeatSameSubject(id, value);
                        });

                        $("select[id*='biospecimen-type']").on("change", function (e) {
                            var id = $(this)[0].id;
                            var value = $(this)[0].value;
                            repeatSameType(id, value);
                        });

                        $("input[name='submit']").on("click", function (e) {
                            var formValues = [];
                            var num = $("input.kit-num").val();
                            var kit = $("select.kits").val();
                            var path = window.location.href.split('?')[0];
                            for(var i = 1; i <= num; i++){
                                var title = $("#biospecimen-" + i).val();
                                var volume = $("#volume-" + i).val();
                                var type = $("#biospecimen-type-" + i).val();
                                var subject = $("#subject-" + i).val();
                                var stockItem = $("#stockitem-" + i).val();
                                var barcode = $("#barcode-" + i).val();
                                var box = $("#select-box-" + i).val();
                                formValues.push({
                                    'title': title,
                                    'volume': volume,
                                    'type': type,
                                    'subject': subject,
                                    'stockitem': stockItem,
                                    'barcode': barcode,
                                    'box': box,
                                    'kit': kit
                                });
                            }

                            $.ajax({
                                dataType: "json",
                                contentType: 'application/json',
                                url: path + '/create_biospecimens',
                                data: JSON.stringify(formValues),
                                success: function (data) {
                                    if (data.hasOwnProperty("error")){
                                        window.bika.lims.portalWarningMessage(data.error);
                                    } else{
                                        window.location.reload();
                                    }
                                }
                            });

                            e.preventDefault();
                        });
                    });
                });
            })(jQuery);
        </script>

    </metal:javascript_head_slot>

    <metal:block fill-slot="style_slot">
        <tal:css>
        <style type="text/css">
            form.hidden{
                display: none;
            }
            .add-biospecimens .discreet{
                font-size:50%;
                color:#ddd;
            }
            .add-biospecimens input{
                margin-bottom:5px;
            }

            /*The collapse-header is positioned upwards, compensate here with margin.
            extra compensation since we only use the one collapsible, and we want to
            position it away from the green-bar.
            */
            .collapsible {
                margin-top: 2em !important;
            }

            .discreet li {padding:0;margin:0;line-height:1em !important;}

            td {padding:10px 10px 0 0;}
        </style>
        </tal:css>
    </metal:block>
</head>

<body
    tal:define="
        form_id view/form_id;
        table_only python:hasattr(view, 'table_only') and view.table_only or view.request.get('table_only','') == form_id;"
    tal:omit-tag="python:table_only">

<metal:content-title fill-slot="content-title"
    tal:define="
        form_id view/form_id;
        table_only python:hasattr(view, 'table_only') and view.table_only or view.request.get('table_only','') == form_id;"
    tal:condition="python:not table_only">
    <h1>
        <img tal:condition="view/icon | nothing"
             src="" tal:attributes="src view/icon"/>
        <img tal:condition="view/getPriorityIcon | nothing"
             src="" tal:attributes="src view/getPriorityIcon"/>
        <span style="position:relative;top:-0.2em;" class="documentFirstHeading" tal:content="python:view.context.translate(view.title)"/>
        <tal:add_actions repeat="add_item python:view.context_actions.keys()"
                         tal:condition="python: not hasattr(view.context, 'getIsOccupied') or not view.context.getIsOccupied()">
            <a tal:attributes="
                style python:'background: url(%s) 2px 50%% no-repeat'%(view.context_actions[add_item]['icon']);
                href python:view.context_actions[add_item]['url'];
                class python:'context_action_link %s' % (view.context_actions[add_item].get('class',''))">
                <span tal:replace="python:add_item"/>
            </a>
        </tal:add_actions>
    </h1>
</metal:content-title>

<metal:content-description fill-slot="content-description"
    tal:define="
        form_id view/form_id;
        table_only python:hasattr(view, 'table_only') and view.table_only or view.request.get('table_only','') == form_id;"
    tal:condition="python:not table_only">

    <div class="documentDescription"
        tal:content="structure view/description"
        tal:condition="view/description"/>

    <tal:form tal:condition="python: context.portal_type=='Project'">
        <metal:form use-macro="view/table_template/macros/form_create_biospecimens"/>
    </tal:form>

</metal:content-description>

<metal:content-core fill-slot="content-core">
    <div id="folderlisting-main-table"
        tal:content="structure view/contents_table"/>

    <tal:hasremarks tal:condition="python:hasattr(context.aq_inner, 'Remarks')">
        <tal:remarks define="
            field python:context.Schema()['Remarks'];
            errors python:{};">
            <p style="margin-top:2em;"/>
             <metal:widget use-macro="python:context.widget('Remarks', mode='edit')" />
        </tal:remarks>
    </tal:hasremarks>

</metal:content-core>

</body>
</html>